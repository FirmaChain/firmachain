syntax = "proto3";
package firmachain.token;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "firmachain/token/token_data.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/firmachain/firmachain/v05/x/token/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a tokenData by index.
	rpc TokenData(TokenDataRequest) returns (TokenDataResponse) {
		option (google.api.http).get = "/firmachain/firmachain/token/tokenData/{tokenID}";
	}

	// Queries a list of tokenData items.
	rpc TokenDataAll(TokenDataAllRequest) returns (TokenDataAllResponse) {
		option (google.api.http).get = "/firmachain/firmachain/token/tokenData";
	}

	// Queries a list of getTokenList items.
	rpc GetTokenList(GetTokenListRequest) returns (GetTokenListResponse) {
		option (google.api.http).get = "/firmachain/firmachain/token/getTokenList";
	}

}

// TokenDataRequest
message TokenDataRequest {
	string token_id = 1;
}

// TokenDataResponse
message TokenDataResponse {
	TokenData token_data = 1 [(gogoproto.nullable) = false];
}


// TokenDataAllRequest
message TokenDataAllRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// TokenDataAllResponse
message TokenDataAllResponse {
	repeated TokenData token_data = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// GetTokenListRequest
message GetTokenListRequest {
  string owner_address = 1;
}

// GetTokenListResponse
message GetTokenListResponse {
	repeated string token_id = 1;
}

