syntax = "proto3";
package firmachain.nft;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "firmachain/nft/nft_item.proto";

option go_package = "github.com/firmachain/firmachain/v05/x/nft/types";

// Query defines the gRPC querier service.
service Query {

	// Queries a list of NftListOfOwner items.
	rpc NftIdListOfOwner(NftIdListOfOwnerRequest) returns (NftIdListOfOwnerResponse) {
		option (google.api.http).get = "/firmachain/firmachain/nft/nftIdListOfOwner";
	}

	// Queries a list of balanceOf items.
	rpc BalanceOf(BalanceOfRequest) returns (BalanceOfResponse) {
		option (google.api.http).get = "/firmachain/firmachain/nft/balanceOf";
	}

	// Queries a nftItem by id.
	rpc NftItem(NftItemRequest) returns (NftItemResponse) {
		option (google.api.http).get = "/firmachain/firmachain/nft/nftItem/{id}";
	}

	// Queries a list of nftItem items.
	rpc NftItemAll(NftItemAllRequest) returns (NftItemAllResponse) {
		option (google.api.http).get = "/firmachain/firmachain/nft/nftItem";
	}

}

// NftIdListOfOwnerRequest
message NftIdListOfOwnerRequest {
  string owner_address = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// NftIdListOfOwnerResponse
message NftIdListOfOwnerResponse {
  repeated uint64 nft_id_list = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// BalanceOfRequest
message BalanceOfRequest {
  string owner_address = 1;
}

// BalanceOfResponse
message BalanceOfResponse {
  uint64 total = 1;
}

// NftItemRequest
message NftItemRequest {
	uint64 id = 1;
}

// NftItemResponse
message NftItemResponse {
	NftItem nft_item = 1;
}

// NftItemAllRequest
message NftItemAllRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// NftItemAllResponse
message NftItemAllResponse {
	repeated NftItem nft_item = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
