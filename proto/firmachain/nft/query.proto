syntax = "proto3";
package firmachain.nft;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "firmachain/nft/nft_item.proto";

option go_package = "github.com/firmachain/firmachain/v05/x/nft/types";

// Query defines the gRPC querier service.
service Query {

	// Queries a list of NftListOfOwner items.
	rpc NftIdListOfOwner(QueryNftIdListOfOwnerRequest) returns (QueryNftIdListOfOwnerResponse) {
		option (google.api.http).get = "/firmachain/firmachain/nft/nftIdListOfOwner";
	}

	// Queries a list of balanceOf items.
	rpc BalanceOf(QueryBalanceOfRequest) returns (QueryBalanceOfResponse) {
		option (google.api.http).get = "/firmachain/firmachain/nft/balanceOf";
	}

	// Queries a nftItem by id.
	rpc NftItem(QueryGetNftItemRequest) returns (QueryGetNftItemResponse) {
		option (google.api.http).get = "/firmachain/firmachain/nft/nftItem/{id}";
	}

	// Queries a list of nftItem items.
	rpc NftItemAll(QueryAllNftItemRequest) returns (QueryAllNftItemResponse) {
		option (google.api.http).get = "/firmachain/firmachain/nft/nftItem";
	}

}

// QueryNftIdListOfOwnerRequest
message QueryNftIdListOfOwnerRequest {
  string ownerAddress = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryNftIdListOfOwnerResponse
message QueryNftIdListOfOwnerResponse {
  repeated uint64 nftIdList = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryBalanceOfRequest
message QueryBalanceOfRequest {
  string ownerAddress = 1;
}

// QueryBalanceOfResponse
message QueryBalanceOfResponse {
  uint64 total = 1;
}

// QueryGetNftItemRequest
message QueryGetNftItemRequest {
	uint64 id = 1;
}

// QueryGetNftItemResponse
message QueryGetNftItemResponse {
	NftItem nftItem = 1;
}

// QueryAllNftItemRequest
message QueryAllNftItemRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAllNftItemResponse
message QueryAllNftItemResponse {
	repeated NftItem nftItem = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
