syntax = "proto3";
package firmachain.firmachain.contract;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "contract/contract_file.proto";
import "contract/contract_log.proto";

option go_package = "github.com/firmachain/firmachain/x/contract/types";

// Query defines the gRPC querier service.
service Query {

	// Queries a list of isContractOwner items.
	rpc IsContractOwner(QueryIsContractOwnerRequest) returns (QueryIsContractOwnerResponse) {
		option (google.api.http).get = "/firmachain/firmachain/contract/isContractOwner";
	}

	// Queries a contractFile by index.
	rpc ContractFile(QueryGetContractFileRequest) returns (QueryGetContractFileResponse) {
		option (google.api.http).get = "/firmachain/firmachain/contract/contractFile/{index}";
	}

	// Queries a list of contractFile items.
	rpc ContractFileAll(QueryAllContractFileRequest) returns (QueryAllContractFileResponse) {
		option (google.api.http).get = "/firmachain/firmachain/contract/contractFile";
	}

	// Queries a contractLog by id.
	rpc ContractLog(QueryGetContractLogRequest) returns (QueryGetContractLogResponse) {
		option (google.api.http).get = "/firmachain/firmachain/contract/contractLog/{id}";
	}

	// Queries a list of contractLog items.
	rpc ContractLogAll(QueryAllContractLogRequest) returns (QueryAllContractLogResponse) {
		option (google.api.http).get = "/firmachain/firmachain/contract/contractLog";
	}

}

message QueryIsContractOwnerRequest {
  string fileHash = 1;
  string ownerAddress = 2;
}

message QueryIsContractOwnerResponse {
  bool result = 1;
}

message QueryGetContractFileRequest {
	string index = 1;
}

message QueryGetContractFileResponse {
	ContractFile ContractFile = 1;
}

message QueryAllContractFileRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllContractFileResponse {
	repeated ContractFile ContractFile = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetContractLogRequest {
	uint64 id = 1;
}

message QueryGetContractLogResponse {
	ContractLog ContractLog = 1;
}

message QueryAllContractLogRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllContractLogResponse {
	repeated ContractLog ContractLog = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
